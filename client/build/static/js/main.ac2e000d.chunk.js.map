{"version":3,"sources":["components/Header.tsx","context/AppReducer.tsx","context/GlobalState.tsx","components/Balance.tsx","components/IncomeExpenses.tsx","components/Transaction.tsx","components/TransactionList.tsx","components/AddTransaction.tsx","App.tsx","index.tsx"],"names":["Header","AppReducer","state","action","type","loading","transactions","payload","filter","_id","error","initialState","getTransactions","deleteTransaction","addTransaction","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","a","axios","get","res","data","response","id","delete","transaction","config","headers","post","Provider","value","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","text","sign","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","event","preventDefault","htmlFor","name","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"8NAMeA,EAJc,WAC3B,OAAO,gD,6DCKM,SAASC,EAAWC,EAAqBC,GACtD,OAAQA,EAAOC,MACb,IAAK,mBACH,OAAO,eACFF,EADL,CAEEG,SAAS,EACTC,aAAcH,EAAOI,UAEzB,IAAK,qBACH,OAAO,eACFL,EADL,CAEEI,aAAcJ,EAAMI,aAAaE,QAC/B,qBAAGC,MAAkBN,EAAOI,aAGlC,IAAK,kBACH,OAAO,eACFL,EADL,CAEEI,aAAa,GAAD,mBAAMJ,EAAMI,cAAZ,CAA0BH,EAAOI,YAEjD,IAAK,oBACH,OAAO,eACFL,EADL,CAEEQ,MAAOP,EAAOI,UAElB,QACE,OAAOL,GCVb,IAAMS,EAA6B,CACjCL,aAAc,GACdM,gBAAiB,kBAAM,MACvBC,kBAAmB,kBAAM,MACzBC,eAAgB,kBAAM,MACtBJ,MAAO,KACPL,SAAS,GAGEU,EAAgBC,wBAAcL,GAE9BM,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClCC,qBAAWlB,EAAYU,GADW,mBACrDT,EADqD,KAC9CkB,EAD8C,KAGtDR,EAAe,uCAAG,4BAAAS,EAAA,+EAEFC,IAAMC,IAAI,wBAFR,OAEdC,EAFc,OAIpBJ,EAAS,CACPhB,KAAM,mBACNG,QAASiB,EAAIC,KAAKA,OANA,gDASpBL,EAAS,CACPhB,KAAM,oBACNG,QAAS,KAAMmB,SAASD,KAAKf,QAXX,yDAAH,qDAgBfG,EAAiB,uCAAG,WAAOc,GAAP,SAAAN,EAAA,+EAEhBC,IAAMM,OAAN,+BAAqCD,IAFrB,OAItBP,EAAS,CAAEhB,KAAM,qBAAsBG,QAASoB,IAJ1B,+CAMtBP,EAAS,CACPhB,KAAM,oBACNG,QAAS,KAAMmB,SAASD,KAAKf,QART,wDAAH,sDAYjBI,EAAc,uCAAG,WAAOe,GAAP,iBAAAR,EAAA,6DACfS,EAAS,CACbC,QAAS,CACP,eAAgB,qBAHC,kBAQDT,IAAMU,KAAK,uBAAwBH,EAAaC,GAR/C,OAQbN,EARa,OASnBJ,EAAS,CAAEhB,KAAM,kBAAmBG,QAASiB,EAAIC,KAAKA,OATnC,gDAWnBL,EAAS,CACPhB,KAAM,oBACNG,QAAS,KAAMmB,SAASD,KAAKf,QAbZ,yDAAH,sDAkBpB,OACE,kBAACK,EAAckB,SAAf,CACEC,MAAO,CACL5B,aAAcJ,EAAMI,aACpBI,MAAOR,EAAMQ,MACbL,QAASH,EAAMG,QACfO,kBACAC,oBACAC,mBAGDI,IC5EQiB,EAhBC,WAAO,IAGfC,EAFmBC,qBAAWtB,GAA5BT,aAGLgC,KAAI,qBAAGC,UACPC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAClCC,QAAQ,GAEX,OACE,oCACE,4CACA,gCAAMP,KCiBGQ,EA5BQ,WAAO,IAGtBC,EAFmBR,qBAAWtB,GAA5BT,aAEqBgC,KAAI,qBAAGC,UAE9BO,EAASD,EACZrC,QAAO,SAAAkC,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAClCC,QAAQ,GAELI,IACqE,EAAzEF,EAAQrC,QAAO,SAAAkC,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,IACnEC,QAAQ,GAEV,OACE,yBAAKK,UAAU,qBACb,6BACE,sCACA,uBAAGA,UAAU,cAAcF,IAE7B,6BACE,uCACA,uBAAGE,UAAU,eAAeD,MCArBE,G,MAtBgC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMX,EAAkB,EAAlBA,OAAQ9B,EAAU,EAAVA,IACtDI,EAAsBwB,qBAAWtB,GAAjCF,kBAEFsC,EAAOZ,EAAS,EAAI,IAAM,IAEhC,OACE,wBAAIS,UAAWT,EAAS,EAAI,QAAU,QACnCW,EACD,8BACGC,EADH,IACUC,KAAKC,IAAId,IAEnB,4BACEnC,KAAK,SACLkD,QAAS,kBAAMzC,EAAkBJ,IACjCuC,UAAU,cAHZ,QCUSO,EApBuB,WAAO,IAAD,EACAlB,qBAAWtB,GAA7CT,EADkC,EAClCA,aAAcM,EADoB,EACpBA,gBAOtB,OALA4C,qBAAU,WACR5C,MAEC,IAGD,oCACE,uCACA,wBAAIoC,UAAU,QACX1C,EAAagC,KAAI,gBAAG7B,EAAH,EAAGA,IAAK8B,EAAR,EAAQA,OAAQW,EAAhB,EAAgBA,KAAhB,OAChB,kBAAC,EAAD,CAAaO,IAAKhD,EAAKA,IAAKA,EAAK8B,OAAQA,EAAQW,KAAMA,UC4ClDQ,EA1DQ,WAAO,IAAD,EACHC,mBAAS,IADN,mBACpBT,EADoB,KACdU,EADc,OAECD,mBAAS,IAFV,mBAEpBpB,EAFoB,KAEZsB,EAFY,KAInB/C,EAAmBuB,qBAAWtB,GAA9BD,eAiBR,OACE,oCACE,mDACA,0BAAMgD,SAdO,SAACC,GAChBA,EAAMC,iBAONlD,EALoB,CAClBoC,OACAX,QAASA,MAUP,yBAAKS,UAAU,gBACb,2BAAOiB,QAAQ,QAAf,OAEE,2BACE7D,KAAK,OACL8D,KAAK,OACLhC,MAAOgB,EACPiB,SA1BS,SAACJ,GAAD,OACnBH,EAAQG,EAAMK,OAAOlC,QA0BXmC,YAAY,oBAIlB,yBAAKrB,UAAU,gBACb,2BAAOiB,QAAQ,UAAf,SAEE,6BAFF,wCAIE,2BACE7D,KAAK,SACL8B,MAAOK,EACP4B,SArCW,SAACJ,GAAD,OACrBF,EAAUE,EAAMK,OAAOlC,QAqCbmC,YAAY,sBAIlB,4BAAQjE,KAAK,SAAS4C,UAAU,OAAhC,sBC7BOsB,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKtB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCdRuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ac2e000d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header: React.FC<{}> = () => {\r\n  return <h2>Expense tracker</h2>\r\n}\r\n\r\nexport default Header\r\n","import { ContextProps, TransactionType } from './GlobalState'\r\n\r\ntype Action =\r\n  | { type: 'DELETE_TRANSACTION'; payload: number }\r\n  | { type: 'ADD_TRANSACTION'; payload: TransactionType }\r\n  | { type: 'GET_TRANSACTIONS'; payload: TransactionType[] }\r\n  | { type: 'TRANSACTION_ERROR'; payload: string }\r\n\r\nexport default function AppReducer(state: ContextProps, action: Action) {\r\n  switch (action.type) {\r\n    case 'GET_TRANSACTIONS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload\r\n      }\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          ({ _id }) => _id !== action.payload\r\n        )\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload]\r\n      }\r\n    case 'TRANSACTION_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { createContext, useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport AppReducer from './AppReducer'\r\n\r\nexport type TransactionType = {\r\n  _id: number\r\n  text: string\r\n  amount: number\r\n}\r\n\r\nexport type NewTransactionType = {\r\n  text: string\r\n  amount: number\r\n}\r\n\r\nexport type ContextProps = {\r\n  transactions: TransactionType[]\r\n  getTransactions: () => void\r\n  deleteTransaction: (id: number) => void\r\n  addTransaction: (transaction: NewTransactionType) => void\r\n  error: string | null\r\n  loading: boolean\r\n}\r\n\r\nconst initialState: ContextProps = {\r\n  transactions: [],\r\n  getTransactions: () => null,\r\n  deleteTransaction: () => null,\r\n  addTransaction: () => null,\r\n  error: null,\r\n  loading: true\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState)\r\n\r\nexport const GlobalProvider: React.FC<{}> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n  const getTransactions = async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/transactions')\r\n\r\n      dispatch({\r\n        type: 'GET_TRANSACTIONS',\r\n        payload: res.data.data\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error\r\n      })\r\n    }\r\n  }\r\n\r\n  const deleteTransaction = async (id: number) => {\r\n    try {\r\n      await axios.delete(`/api/v1/transactions/${id}`)\r\n\r\n      dispatch({ type: 'DELETE_TRANSACTION', payload: id })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error\r\n      })\r\n    }\r\n  }\r\n  const addTransaction = async (transaction: NewTransactionType) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/v1/transactions', transaction, config)\r\n      dispatch({ type: 'ADD_TRANSACTION', payload: res.data.data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: error.response.data.error\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  const total = transactions\r\n    .map(({ amount }) => amount)\r\n    .reduce((acc, item) => acc + item, 0)\r\n    .toFixed(2)\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  const amounts = transactions.map(({ amount }) => amount)\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => acc + item, 0)\r\n    .toFixed(2)\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => acc + item, 0) * -1\r\n  ).toFixed(2)\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">{expense}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext, TransactionType } from '../context/GlobalState'\r\n\r\nconst Transaction: React.FC<TransactionType> = ({ text, amount, _id }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext)\r\n\r\n  const sign = amount < 0 ? '-' : '+'\r\n\r\n  return (\r\n    <li className={amount < 0 ? 'minus' : 'plus'}>\r\n      {text}\r\n      <span>\r\n        {sign}${Math.abs(amount)}\r\n      </span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => deleteTransaction(_id)}\r\n        className=\"detele-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionList: React.FC<{}> = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext)\r\n\r\n  useEffect(() => {\r\n    getTransactions()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(({ _id, amount, text }) => (\r\n          <Transaction key={_id} _id={_id} amount={amount} text={text} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n\r\n  const { addTransaction } = useContext(GlobalContext)\r\n\r\n  const onTextChange = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    setText(event.target.value)\r\n  const onAmountChange = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    setAmount(event.target.value)\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n\r\n    const transaction = {\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(transaction)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">\r\n            Text\r\n            <input\r\n              type=\"text\"\r\n              name=\"text\"\r\n              value={text}\r\n              onChange={onTextChange}\r\n              placeholder=\"Enter text...\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount\r\n            <br />\r\n            (negative-expense, positive - income)\r\n            <input\r\n              type=\"number\"\r\n              value={amount}\r\n              onChange={onAmountChange}\r\n              placeholder=\"Enter amount...\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn\">\r\n          Add transaction\r\n        </button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React from 'react'\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses'\n\nimport './App.css'\nimport TransactionList from './components/TransactionList'\nimport AddTransaction from './components/AddTransaction'\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}